# coding: utf-8

"""
    LICENSE API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 1.0.28
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import cli_lic
from cli_lic.rest import ApiException
from cli_lic.apis.user_api import UserApi

from api_lic.test.settings import *

class TestUserApi(unittest.TestCase):
    """ UserApi unit test stubs """

    def setUp(self):
        self.api = cli_lic.apis.user_api.UserApi()

    def tearDown(self):
        pass

    def test_home_get(self):
        """
        Test case for user_get

        
        """
        auth_user()
        ret=self.api.home_get()
        assert (ret.success)
        print(ret)
        pass

    def test_home_patch(self):
        """
        Test case for home_patch


        """
        pass

    def test_license_license_uuid_delete(self):
        """
        Test case for license_license_uuid_delete


        """
        pass

    def test_license_license_uuid_get(self):
        """
        Test case for license_license_uuid_get


        """
        pass

    def test_license_license_uuid_patch(self):
        """
        Test case for license_license_uuid_patch

    def test_user_patch(self):
        """
        auth_user()

        data = dict(passwd=dig(10))
        ret = self.api.home_patch(body=data)
        assert (ret.success)

        pass

    def test_license_list_get(self):
        """
        Test case for license_list_get


        """
        pass

    def test_license_period_license_period_uuid_delete(self):
        """
        Test case for license_period_license_period_uuid_delete


        """
        pass

    def test_license_period_license_period_uuid_get(self):
        """
        Test case for license_period_license_period_uuid_get


        """
        pass

    def test_license_period_license_period_uuid_patch(self):
        """
        Test case for license_period_license_period_uuid_patch


        """
        pass

    def test_license_period_list_get(self):
        """
        Test case for license_period_list_get


        """
        pass

    def test_license_period_post(self):
        """
        Test case for license_period_post


        """
        pass

    def test_license_post(self):
        """
        Test case for license_post


        """
        auth_user()
        rate = rand_rate()[1]
        if 'LRN' in rate.type:
            data=dict(rate_uuid=rate.rate_uuid,lrn=dict(cps=round(random.random()*100),type=rate.type))
        else:
            data = dict(rate_uuid=rate.rate_uuid, switch=dict(ip=ip(), type=rate.type))
        data['periods']=[dict(start_time=str(datetime.now(UTC)),
                              end_time=str(datetime.now(UTC)+timedelta(days=10)))]
        print(data)
        ret=self.api.license_post(body=data)
        assert(ret.success)
        pass

    def test_notification_list_get(self):
        """
        Test case for notification_list_get


        """
        auth_user()
        ret = self.api.notification_list_get()
        assert (ret.success)
        pass

    def test_payment_list_get(self):
        """
        Test case for payment_list_get


        """
        auth_user()
        ret = self.api.payment_list_get()
        assert (ret.success)
        pass

    def test_payment_payment_uuid_delete(self):
        """
        Test case for payment_payment_uuid_delete


        """
        pass

    def test_payment_payment_uuid_get(self):
        """
        Test case for payment_payment_uuid_get


        """
        pass

    def test_payment_payment_uuid_patch(self):
        """
        Test case for payment_payment_uuid_patch


        """
        pass

    def test_payment_post(self):
        """
        Test case for payment_post


        """
        pass


if __name__ == '__main__':
    unittest.main()
