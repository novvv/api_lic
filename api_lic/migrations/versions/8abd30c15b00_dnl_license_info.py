"""dnl_license_info

Revision ID: 8abd30c15b00
Revises: e258be71ed9f
Create Date: 2018-12-17 12:52:16.905885

"""
from alembic import op
import sqlalchemy as sa
import api_lic.migration_types


# revision identifiers, used by Alembic.
revision = '8abd30c15b00'
down_revision = 'e258be71ed9f'
branch_labels = None
depends_on = None


def upgrade():
    #connection = op.get_bind()
    #connection.execute('delete from users')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dnl_license_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('carrier_name', sa.String(length=100), nullable=True),
    sa.Column('ss_type', sa.SmallInteger(), server_default=sa.text('0'), nullable=False),
    sa.Column('status', sa.SmallInteger(), server_default=sa.text('1'), nullable=False),
    sa.Column('ss_name', sa.String(length=100), nullable=False),
    sa.Column('uuid', sa.String(length=128), nullable=False),
    sa.Column('recv_ip', sa.String(length=16), nullable=False),
    sa.Column('recv_port', sa.Integer(), nullable=True),
    sa.Column('ss_bind_mac', sa.String(length=18), nullable=False),
    sa.Column('ss_bind_ip', sa.String(length=16), nullable=False),
    sa.Column('ss_bind_port', sa.Integer(), nullable=True),
    sa.Column('max_cap', sa.Integer(), server_default=sa.text('500'), nullable=False),
    sa.Column('max_cps', sa.Integer(), server_default=sa.text('100'), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), server_default=sa.text("('now'::text)::date"), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), server_default=sa.text("(('now'::text)::date + '3650 days'::interval)"), nullable=True),
    sa.Column('expires', sa.Integer(), server_default=sa.text('3650'), nullable=True),
    sa.Column('update_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('create_user', sa.SmallInteger(), server_default=sa.text('0'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dnl_license_info_carrier_name'), 'dnl_license_info', ['carrier_name'], unique=False)
    op.create_index(op.f('ix_dnl_license_info_ss_bind_mac'), 'dnl_license_info', ['ss_bind_mac'], unique=False)
    op.create_index(op.f('ix_dnl_license_info_ss_name'), 'dnl_license_info', ['ss_name'], unique=False)
    op.create_index(op.f('ix_dnl_license_info_ss_type'), 'dnl_license_info', ['ss_type'], unique=False)
    op.create_index(op.f('ix_dnl_license_info_uuid'), 'dnl_license_info', ['uuid'], unique=False)
    op.create_table('dnl_license_info_record',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('carrier_name', sa.String(length=100), nullable=True),
    sa.Column('ss_type', sa.SmallInteger(), nullable=True),
    sa.Column('status', sa.SmallInteger(), nullable=True),
    sa.Column('ss_name', sa.String(length=100), nullable=True),
    sa.Column('uuid', sa.String(length=128), nullable=True),
    sa.Column('recv_ip', sa.String(length=16), nullable=True),
    sa.Column('recv_port', sa.Integer(), nullable=True),
    sa.Column('ss_bind_mac', sa.String(length=18), nullable=True),
    sa.Column('ss_bind_ip', sa.String(length=16), nullable=True),
    sa.Column('ss_bind_port', sa.Integer(), nullable=True),
    sa.Column('max_cap', sa.Integer(), nullable=True),
    sa.Column('max_cps', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('create_user', sa.SmallInteger(), nullable=True),
    sa.Column('time', api_lic.migration_types.Numeric(), nullable=True),
    sa.Column('flag', sa.CHAR(length=1), nullable=True),
    sa.PrimaryKeyConstraint('record_id')
    )
    op.create_table('dnl_license_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(length=128), nullable=False),
    sa.Column('recv_ip', sa.String(length=16), nullable=False),
    sa.Column('recv_port', sa.Integer(), nullable=True),
    sa.Column('cap', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('cps', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sip_addr', sa.String(length=256), nullable=True),
    sa.Column('status', sa.SmallInteger(), server_default=sa.text('0'), nullable=False),
    sa.Column('create_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dnl_license_log_recv_ip'), 'dnl_license_log', ['recv_ip'], unique=False)
    op.create_index(op.f('ix_dnl_license_log_uuid'), 'dnl_license_log', ['uuid'], unique=False)
    op.create_table('dnl_pre_licensing_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip', sa.String(length=16), nullable=False),
    sa.Column('cap', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('cps', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('expires', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dnl_pre_licensing_info_record',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('ip', sa.String(length=16), nullable=True),
    sa.Column('cap', sa.Integer(), nullable=True),
    sa.Column('cps', sa.Integer(), nullable=True),
    sa.Column('expires', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('time', api_lic.migration_types.Numeric(), nullable=True),
    sa.Column('flag', sa.CHAR(length=1), nullable=True),
    sa.PrimaryKeyConstraint('record_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('dnl_pre_licensing_info_record')
    op.drop_table('dnl_pre_licensing_info')
    op.drop_index(op.f('ix_dnl_license_log_uuid'), table_name='dnl_license_log')
    op.drop_index(op.f('ix_dnl_license_log_recv_ip'), table_name='dnl_license_log')
    op.drop_table('dnl_license_log')
    op.drop_table('dnl_license_info_record')
    op.drop_index(op.f('ix_dnl_license_info_uuid'), table_name='dnl_license_info')
    op.drop_index(op.f('ix_dnl_license_info_ss_type'), table_name='dnl_license_info')
    op.drop_index(op.f('ix_dnl_license_info_ss_name'), table_name='dnl_license_info')
    op.drop_index(op.f('ix_dnl_license_info_ss_bind_mac'), table_name='dnl_license_info')
    op.drop_index(op.f('ix_dnl_license_info_carrier_name'), table_name='dnl_license_info')
    op.drop_table('dnl_license_info')
    # ### end Alembic commands ###
